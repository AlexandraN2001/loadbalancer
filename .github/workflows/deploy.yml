name: Deploy to EC2 (Production)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Configure the SSH key to connect to the EC2 instances
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY_PROD }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add all EC2 host DNS addresses to known_hosts
          for HOST_DNS in ${{ secrets.HOST_DNS_PROD_1 }} ${{ secrets.HOST_DNS_PROD_2 }} ${{ secrets.HOST_DNS_PROD_3 }} ${{ secrets.HOST_DNS_PROD_4 }}; do
            ssh-keyscan -H "$HOST_DNS" >> ~/.ssh/known_hosts
          done

      # Step 3: Deploy to each EC2 instance
      - name: Deploy to EC2 instances
        run: |
          # Iterar sobre cada instancia de EC2
          for HOST_DNS in ${{ secrets.HOST_DNS_PROD_1 }} ${{ secrets.HOST_DNS_PROD_2 }} ${{ secrets.HOST_DNS_PROD_3 }} ${{ secrets.HOST_DNS_PROD_4 }}; do
            # Ejecutar comandos en cada EC2
            ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@$HOST_DNS << 'SCRIPT'
              # Instalar nginx y git si no están instalados
              if ! command -v nginx &> /dev/null; then
                sudo dnf install nginx -y
              fi
              if ! command -v git &> /dev/null; then
                sudo dnf install git -y
              fi

              # Asegurar que nginx esté corriendo
              sudo systemctl start nginx
              sudo systemctl enable nginx

              # Clonar el repositorio si no existe
              if [ ! -d "${{ secrets.TARGET_DIR }}" ]; then
                git clone https://github.com/AlexandraN2001/loadbalancer.git ${{ secrets.TARGET_DIR }}
              fi
              cd ${{ secrets.TARGET_DIR }}

              # Hacer pull de los últimos cambios desde la rama main
              git pull origin main

              # Copiar index.html al directorio por defecto de nginx
              sudo cp index.html /usr/share/nginx/html/

              # Reiniciar nginx para aplicar los cambios
              sudo systemctl restart nginx
            SCRIPT
          done
