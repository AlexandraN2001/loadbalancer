name: Deploy to EC2 (Production)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Configure the SSH key to connect to the EC2 instances
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY_PROD }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add all EC2 host DNS addresses to known_hosts
          for HOST_DNS in ${{ secrets.HOST_DNS_PROD_1 }} ${{ secrets.HOST_DNS_PROD_2 }} ${{ secrets.HOST_DNS_PROD_3 }} ${{ secrets.HOST_DNS_PROD_4 }}; do
            ssh-keyscan -H "$HOST_DNS" >> ~/.ssh/known_hosts
          done

      # Step 3: Deploy to each EC2 instance
      - name: Deploy to EC2 instances
        run: |
          for HOST_DNS in ${{ secrets.HOST_DNS_PROD_1 }} ${{ secrets.HOST_DNS_PROD_2 }} ${{ secrets.HOST_DNS_PROD_3 }} ${{ secrets.HOST_DNS_PROD_4 }}; do
            ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@$HOST_DNS <<EOF
              # Install nginx and git if not installed
              if ! command -v nginx &> /dev/null; then
                sudo dnf install nginx -y
              fi
              if ! command -v git &> /dev/null; then
                sudo dnf install git -y
              fi

              # Ensure nginx is running
              sudo systemctl start nginx
              sudo systemctl enable nginx

              # Clone the repository if it doesn't exist
              if [ ! -d "${{ secrets.TARGET_DIR }}" ]; then
                git clone https://github.com/AlexandraN2001/loadbalancer.git ${{ secrets.TARGET_DIR }}
              fi
              cd ${{ secrets.TARGET_DIR }}

              # Pull the latest changes from the main branch
              git pull origin main

              # Copy index.html to nginx's default directory
              sudo cp index.html /usr/share/nginx/html/

              # Restart nginx to apply the changes
              sudo systemctl restart nginx
            EOF
          done
